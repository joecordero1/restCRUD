name: DevSecOps CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: |
          npx eslint . --ext .js,.ts || echo "Lint warnings present"

      - name: Simulate Health Check
        run: |
          echo "Simulando test de salud"
          curl --fail http://localhost:3000/api || echo "API no disponible (simulaci√≥n)"

      - name: Run tests (placeholder)
        run: npm test || echo "Tests no definidos"

  sonar-analysis:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  scan-security:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
      
      - name: Save Trivy result to file
        run: trivy fs . > trivy-results.txt || true

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-results.txt

  deploy-staging:
    needs: [scan-security, sonar-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Mostrar contenido del directorio actual (debug)
        run: ls -la $GITHUB_WORKSPACE

      - name: Validar pol√≠ticas de despliegue
        run: |
          echo "Verificando pol√≠ticas de despliegue....."
          if [ ! -f "$GITHUB_WORKSPACE/.approved" ]; then
            echo "‚ùå Falta archivo de aprobaci√≥n. Abortando."
            exit 1
          fi
          echo "‚úî Archivo de aprobaci√≥n encontrado."

      - name: Simular despliegue en entorno de pruebas
        run: echo "‚úî Desplegado en entorno de pruebas (simulado)"


  deploy-prod:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Simular despliegue en producci√≥n
        run: echo "‚úî Desplegado en producci√≥n (simulado)"

      - name: Simular monitoreo post-deploy
        run: |
          echo "üîç Iniciando monitoreo post-despliegue..."
          echo "Simulaci√≥n de logs, m√©tricas y alertas generadas autom√°ticamente."
